<div class="mx-auto ms-lg-80 ps-lg-4">
  <section>
    <div class="p-8 bg-white navbar-light">
      <div class="row align-items-center justify-content-between">
        <div class="col-12 col-lg-6 mb-4 mb-lg-0">
          <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
              <li class="breadcrumb-item" aria-current="page">
                <a class="d-flex align-items-center" href="#">
                  <svg
                    class="text-primary me-2"
                    width="20"
                    height="20"
                    viewbox="0 0 20 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <path
                      d="M16.8737 16.875V9.02647C16.8737 8.93939 16.8555 8.85327 16.8202 8.77363C16.785 8.694 16.7335 8.6226 16.6691 8.56402L10.4187 2.88159C10.3036 2.77699 10.1537 2.71904 9.99821 2.71904C9.84272 2.71905 9.69281 2.77701 9.57777 2.88162L3.3282 8.56402C3.26377 8.6226 3.2123 8.69399 3.17707 8.77363C3.14185 8.85326 3.12366 8.93937 3.12366 9.02645V16.875"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"></path>
                    <path
                      d="M1.24866 16.875H18.7487"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"></path>
                    <path
                      d="M11.8732 16.8743V12.4993C11.8732 12.3336 11.8073 12.1746 11.6901 12.0574C11.5729 11.9402 11.4139 11.8743 11.2482 11.8743H8.74817C8.58241 11.8743 8.42344 11.9402 8.30623 12.0574C8.18902 12.1746 8.12317 12.3336 8.12317 12.4993V16.8743"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"></path>
                  </svg>
                  <span>Inventory Management</span>
                </a>
              </li>
              <li class="breadcrumb-item active" aria-current="page">
                <a class="d-flex align-items-center" href="#">
                  <svg
                    class="text-primary me-2"
                    width="20"
                    height="20"
                    viewbox="0 0 20 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <path
                      d="M17.8125 16.25H2.1875"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"></path>
                    <path
                      d="M7.8125 16.25V6.875H12.1875"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"></path>
                    <path
                      d="M16.5625 3.125H12.1875V16.25H16.5625V3.125Z"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"></path>
                    <path
                      d="M3.4375 16.25V10.625H7.8125"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"></path>
                  </svg>
                  <span>Products</span>
                </a>
              </li>
            </ol>
          </nav>
        </div>
      </div>
    </div>
  </section>

  <div class="row">
    <div class="col-md-6"></div>
    <div class="col-md-6">
      <h3>Movement Summary</h3>
    </div>

    <div class="col-md-5">
      <h2 id="productTitle">Unit: Name of Unit</h2>
    </div>
    <div class="col-md-3">
      <div class="input-group">
        <input
          type="date"
          id="fromDate"
          class="form-control"
          placeholder="From date" />
        <input
          type="date"
          id="toDate"
          class="form-control"
          placeholder="To date" />
        <button id="goButton" class="btn btn-primary" onclick="go()">Go</button>
      </div>
    </div>
    <div class="col-md-2">
      <input
        type="text"
        id="searchInput"
        class="form-control"
        placeholder="Search..." />
    </div>
    <div class="col-md-2">
      <button
        type="button"
        class="btn btn-primary mt-3"
        onclick="generateReport()">
        <i class="fas fa-cog"></i> Generate Report
      </button>
    </div>
  </div>
  <div class="container mt-5">
    <div class="row">
      <!-- Product Details Card -->
      <div class="col-md-4">
        <div class="card">
          <div class="card-header">
            <h4>Unit Details</h4>
          </div>
          <ul class="list-group list-group-flush">
            <!-- Product Selection Dropdown -->
            <li class="list-group-item">
              <label for="unitSelector" class="form-label"
                >Select Product:</label
              >
              <select id="unitSelector" class="form-select unitSelector">
                <option value="">Select Unit</option>
                <% if (units) { %> <% for (let dat of units) { %>
                <option><%= dat.unit_name %></option>
                <% } %> <% } %>
              </select>
            </li>
            <!-- Quantity in Stock -->
            <li class="list-group-item" id="deliveryPoint">
              Delivery Point: <strong></strong>
            </li>
            <!-- Last Purchase Date -->
            <li class="list-group-item" id="contactPerson">
              Contact Person: <strong></strong>
            </li>
            <!-- Last Dispatch Date -->
            <li class="list-group-item" id="phoneNumber">
              Phone Number: <strong></strong>
            </li>
            <!-- Reorder Level -->
            <li class="list-group-item" id="location">
              Location: <strong></strong>
            </li>
            <li class="list-group-item" id="province">
              Province: <strong></strong>
            </li>
          </ul>
        </div>
      </div>

      <!-- Movement Table -->
      <div class="col-md-8">
        <table class="table table-striped table-hover">
          <thead class="table-primary">
            <tr>
              <th>Product</th>
              <th>Product ID</th>

              <th>Qty Ordered</th>
              <th>Qty Received</th>
              <th>Balance</th>
              <th>Comments</th>
            </tr>
          </thead>
          <tbody id="unitTable"></tbody>
        </table>

        <!-- Pagination -->
        <nav aria-label="Page navigation">
          <ul class="pagination justify-content-end">
            <li class="page-item disabled">
              <span class="page-link">Previous</span>
            </li>
            <li class="page-item active" aria-current="page">
              <span class="page-link"
                >1 <span class="sr-only">(current)</span></span
              >
            </li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item">
              <a class="page-link" href="#">Next</a>
            </li>
          </ul>
        </nav>
        <div
          class="modal fade"
          id="reportModal"
          tabindex="-1"
          aria-labelledby="reportModalLabel"
          aria-hidden="true">
          <div class="modal-dialog modal-lg">
            <div class="modal-content">
              <div class="modal-header">
                <button
                  type="button"
                  class="btn-close"
                  data-bs-dismiss="modal"
                  aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <h3 style="text-align: center" id="rangeTitle"></h3>
                <br />

                <hr />
                <table class="table table-bordered">
                  <thead class="table-dark">
                    <tr>
                      <th scope="col">Product</th>
                      <th scope="col">Product ID</th>
                      <th scope="col">Quantity Ordered</th>
                      <th scope="col">Quantity Received</th>
                      <th scope="col">Balance</th>
                      <th scope="col">Comments</th>
                    </tr>
                  </thead>
                  <tbody id="tennis">
                    <!-- Sample data rows (replace with your actual data) -->

                    <!-- Add more rows as needed -->
                  </tbody>
                </table>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-success mx-2">
                  <i class="fas fa-save"></i> Save
                </button>

                <!-- Print Button -->
                <button
                  type="button"
                  class="btn btn-primary mx-2"
                  onclick="printModalContent()">
                  <i class="fas fa-print"></i> Print
                </button>
                <button
                  type="button"
                  class="btn btn-secondary"
                  data-bs-dismiss="modal">
                  Close
                </button>
                <!-- You can add additional buttons or actions here if needed -->
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- Footer container -->
  <div class="main-footer">
    <span>&copy; 2023. Agrifora Management System. All Rights Reserved.</span>
    <span
      >Created by:
      <a href="http://soxfort.com" target="_blank"
        >Soxfort Solutions | Intuitive Innovation</a
      ></span
    >
  </div>
  <!-- main-footer -->
  <script src="js/bootstrap/bootstrap.bundle.min.js"></script>
  <script src="js/main.js"></script>

  <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
  <script src="js/charts-demo.js"></script>
  <script>
    // Add an event listener to the product selector
    let selectedUnit;
    document
      .getElementById("unitSelector")
      .addEventListener("change", function () {
        // Get the selected product value
        selectedUnit = this.value;
      });

    function go() {
      const fromDate = document.getElementById("fromDate").value;
      const toDate = document.getElementById("toDate").value;

      // Check if both fromDate and toDate are not empty
      if (fromDate && toDate && selectedUnit) {
        // Get the selected product value
        // Send an AJAX request to the server
        fetch("/unitmovement", {
          method: "POST",
          body: JSON.stringify({
            unit: selectedUnit,
            fromDate: fromDate,
            toDate: toDate,
          }),
          headers: {
            "Content-type": "application/json; charset=UTF-8",
          },
        })
          .then((response) => response.json())
          .then((data) => {
            // Update the table with the new data
            updateTable(
              data.arry,
              data.contact_person,
              data.delivery_point,
              data.phone,
              data.location,
              data.province
            );
          })
          .catch((error) => {
            console.error("Error:", error);
          });
      } else {
        // Display a message or handle the case when either fromDate or toDate is empty
        window.alert("Please select both From Date and To Date.");
      }
    }

    function generateReport() {
      const fromDate = document.getElementById("fromDate").value;
      const toDate = document.getElementById("toDate").value;
      const rangeTitle = document.getElementById("rangeTitle");
      rangeTitle.innerHTML = "";
      rangeTitle.innerHTML = `
                  Unit movement statement for <br />
                  ${selectedUnit} from ${fromDate}<br />to ${toDate}`;

      if (fromDate && toDate && selectedUnit) {
        // Get the selected product value

        // Send an AJAX request to the server
        fetch("/unitmovement", {
          method: "POST",
          body: JSON.stringify({
            unit: selectedUnit,
            fromDate: fromDate,
            toDate: toDate,
          }),
          headers: {
            "Content-type": "application/json; charset=UTF-8",
          },
        })
          .then((response) => response.json())
          .then((data) => {
            // Update the table with the new data
            let movements = data.arry;
            var modal = document.getElementById("reportModal");
            var modalTitle = modal.querySelector(".modal-title");
            var modalBody = modal.querySelector(".modal-body");
            var modalFooter = modal.querySelector(".modal-footer");

            const tableBody = document.getElementById("tennis");

            tableBody.innerHTML = ""; // Clear the table body
            let balance = 0;
            let totalDispatched = 0;
            let totalPurchases = 0;

            movements.forEach((movement) => {
              const row = document.createElement("tr");
              //const formattedDate = formatDate(movement.date);

              let quantity =
                movement.ordered !== null
                  ? movement.ordered.toLocaleString()
                  : ""; // Check if quantity_ordered is not null
              row.innerHTML = `
         
          <td><a href="#">${movement.product}</a></td>
          <td>${movement.id}</td>
          <td>${movement.ordered}</td>
          <td>-</td>
          <td>${balance}</td>
          <td>Received</td>
        `;
              tableBody.appendChild(row);
            });

            // Show the modal
            $("#reportModal").modal("show");
          })
          .catch((error) => {
            console.error("Error:", error);
          });
      } else {
        // Display a message or handle the case when either fromDate or toDate is empty
        window.alert("Please select both From Date and To Date.");
      }
    }

    // Function to update the table with new data
    function updateTable(
      movements,
      contact_person,
      delivery_point,
      phone,
      location,
      province
    ) {
      let title = document.getElementById("productTitle");
      title.innerHTML = "";
      title.innerHTML = "Unit:" + selectedUnit;
      let deliveryPoint = document.getElementById("deliveryPoint");
      deliveryPoint.innerHTML = "";
      deliveryPoint.innerHTML = `Delivery Point: <strong>${delivery_point}</strong>`;
      let contactPerson = document.getElementById("contactPerson");
      contactPerson.innerHTML = "";
      contactPerson.innerHTML = `Contact Person: <strong>${contact_person}</strong>`;
      let phoneNumber = document.getElementById("phoneNumber");
      phoneNumber.innerHTML = "";
      phoneNumber.innerHTML = `Phone: <strong>${phone}</strong>`;
      let loc = document.getElementById("location");
      loc.innerHTML = "";
      loc.innerHTML = `Location: <strong>${location}</strong>`;
      let prov = document.getElementById("province");
      prov.innerHTML = "";
      prov.innerHTML = `Province: <strong>${province}</strong>`;

      const tableBody = document.querySelector("tbody");
      tableBody.innerHTML = ""; // Clear the table body
      let balance = 0;
      let totalDispatched = 0;
      let totalPurchases = 0;

      movements.forEach((movement) => {
        const row = document.createElement("tr");
        //const formattedDate = formatDate(movement.date);

        let quantity =
          movement.ordered !== null ? movement.ordered.toLocaleString() : ""; // Check if quantity_ordered is not null
        row.innerHTML = `
         
          <td><a href="#">${movement.product}</a></td>
          <td>${movement.id}</td>
          <td>${movement.ordered}</td>
          <td>-</td>
          <td>${balance}</td>
          <td>Received</td>
        `;
        tableBody.appendChild(row);
      });
    }
    function formatDate(dateString) {
      const date = new Date(dateString);
      const year = date.getFullYear();
      const month = String(date.getMonth() + 1).padStart(2, "0");
      const day = String(date.getDate()).padStart(2, "0");
      return `${year}-${month}-${day}`;
    }
    function printModalContent() {
      var modalContent = document.getElementById("reportModal").cloneNode(true);
      var printWindow = window.open("", "", "height=400,width=600");
      printWindow.document.write("<html><head><title>Dispatch Card</title>");
      // Include Bootstrap CSS for styling
      printWindow.document.write(
        '<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">'
      );
      printWindow.document.write("</head><body>");
      printWindow.document.write(modalContent.innerHTML);
      // Hide unnecessary elements for printing
      printWindow.document.write(
        "<style>.modal-footer { display: none; } footer { display: block; }</style>"
      );
      printWindow.document.write("</body></html>");
      printWindow.document.close();
      printWindow.print();
    }
  </script>
</div>
