<div class="mx-auto ms-lg-80 ps-lg-4">
  <section>
    <div class="p-8 bg-white navbar-light">
      <div class="row align-items-center justify-content-between">
        <div class="col-12 col-lg-6 mb-4 mb-lg-0">
          <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
              <li class="breadcrumb-item" aria-current="page">
                <a class="d-flex align-items-center" href="#">
                  <svg
                    class="text-primary me-2"
                    width="20"
                    height="20"
                    viewbox="0 0 20 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <path
                      d="M16.8737 16.875V9.02647C16.8737 8.93939 16.8555 8.85327 16.8202 8.77363C16.785 8.694 16.7335 8.6226 16.6691 8.56402L10.4187 2.88159C10.3036 2.77699 10.1537 2.71904 9.99821 2.71904C9.84272 2.71905 9.69281 2.77701 9.57777 2.88162L3.3282 8.56402C3.26377 8.6226 3.2123 8.69399 3.17707 8.77363C3.14185 8.85326 3.12366 8.93937 3.12366 9.02645V16.875"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"></path>
                    <path
                      d="M1.24866 16.875H18.7487"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"></path>
                    <path
                      d="M11.8732 16.8743V12.4993C11.8732 12.3336 11.8073 12.1746 11.6901 12.0574C11.5729 11.9402 11.4139 11.8743 11.2482 11.8743H8.74817C8.58241 11.8743 8.42344 11.9402 8.30623 12.0574C8.18902 12.1746 8.12317 12.3336 8.12317 12.4993V16.8743"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"></path>
                  </svg>
                  <span>Product Movement</span>
                </a>
              </li>
            </ol>
          </nav>
        </div>
        <div class="col-12 col-lg-6 d-flex">
          <a
            class="btn btn-outline-light d-inline-flex align-items-center justify-content-center p-0 ms-lg-auto me-2 shadow rounded-2"
            href="#"
            style="width: 40px; height: 40px">
            <svg
              width="12"
              height="12"
              viewbox="0 0 12 12"
              fill="none"
              xmlns="http://www.w3.org/2000/svg">
              <path
                d="M5.4375 9.375C7.61212 9.375 9.375 7.61212 9.375 5.4375C9.375 3.26288 7.61212 1.5 5.4375 1.5C3.26288 1.5 1.5 3.26288 1.5 5.4375C1.5 7.61212 3.26288 9.375 5.4375 9.375Z"
                stroke="#7A899B"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
              <path
                d="M8.22156 8.22189L10.4997 10.5"
                stroke="#7A899B"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
            </svg>
          </a>
          <a
            class="btn btn-outline-light d-inline-flex align-items-center justify-content-center p-0 me-2 shadow rounded-2"
            href="#"
            style="width: 40px; height: 40px">
            <svg
              width="12"
              height="12"
              viewbox="0 0 12 12"
              fill="none"
              xmlns="http://www.w3.org/2000/svg">
              <path
                d="M2.12974 8.29964C1.57041 7.35675 1.37453 6.2421 1.57887 5.165C1.78322 4.0879 2.37374 3.12245 3.23955 2.44994C4.10535 1.77742 5.18688 1.4441 6.28105 1.51257C7.37522 1.58104 8.40676 2.04659 9.18197 2.8218C9.95718 3.597 10.4227 4.62854 10.4912 5.72271C10.5597 6.81688 10.2264 7.89841 9.55386 8.76422C8.88135 9.63003 7.9159 10.2206 6.8388 10.4249C5.76171 10.6293 4.64706 10.4334 3.70416 9.87406L3.70417 9.87401L2.14931 10.3183C2.08498 10.3366 2.01691 10.3375 1.95214 10.3207C1.88738 10.3039 1.82828 10.2701 1.78097 10.2228C1.73366 10.1755 1.69986 10.1164 1.68308 10.0516C1.6663 9.98687 1.66714 9.9188 1.68552 9.85447L2.12977 8.29961L2.12974 8.29964Z"
                stroke="#7A899B"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
            </svg>
          </a>
          <a
            class="btn btn-outline-light d-inline-flex align-items-center justify-content-center p-0 me-2 shadow rounded-2"
            href="#"
            style="width: 40px; height: 40px">
            <svg
              width="10"
              height="12"
              viewbox="0 0 10 12"
              fill="none"
              xmlns="http://www.w3.org/2000/svg">
              <path
                d="M4 11H6"
                stroke="#7A899B"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
              <path
                d="M1.6988 4.14999C1.69819 3.73489 1.78393 3.32378 1.95108 2.94036C2.11823 2.55694 2.36348 2.20879 2.6727 1.91598C2.98192 1.62317 3.34899 1.39148 3.75275 1.23429C4.15651 1.07709 4.58897 0.997483 5.02522 1.00006C6.84554 1.01294 8.30157 2.45262 8.30157 4.18953V4.49999C8.30157 6.06693 8.64611 6.9762 8.94956 7.47317C8.98225 7.52627 8.99965 7.58663 8.99999 7.64817C9.00034 7.70971 8.98362 7.77025 8.95153 7.82368C8.91944 7.87711 8.87311 7.92155 8.81721 7.9525C8.76131 7.98346 8.69783 7.99984 8.63315 8H1.36685C1.30217 7.99984 1.23867 7.98345 1.18277 7.95249C1.12686 7.92153 1.08053 7.87708 1.04844 7.82364C1.01636 7.7702 0.999648 7.70965 1.00001 7.64811C1.00036 7.58656 1.01777 7.52619 1.05048 7.47309C1.3541 6.97611 1.69879 6.06685 1.69879 4.49999L1.6988 4.14999Z"
                stroke="#7A899B"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
            </svg>
          </a>
        </div>
      </div>
    </div>
  </section>
  <!-- Quick Stats -->
  <section class="py-6">
    <div class="container">
      <div class="row">
        <div class="col-12 col-md-6 col-lg-3 mb-4 mb-lg-0">
          <div class="p-8 border rounded-2">
            <div
              class="d-flex mb-6 align-items-start justify-content-between"></div>
            <h1 class="mb-4" id="totalPurchases"></h1>
            <p class="mb-0">
              <span><strong>Total Purchases (kgs)</strong></span>
            </p>
          </div>
        </div>
        <div class="col-12 col-md-6 col-lg-3 mb-4 mb-lg-0">
          <div class="p-8 border rounded-2">
            <div
              class="d-flex mb-6 align-items-start justify-content-between"></div>
            <h1 class="mb-4" id="totalDispatched"></h1>
            <p class="mb-0">
              <span><strong>Total Dispatched (kgs)</strong></span>
            </p>
          </div>
        </div>
        <div class="col-12 col-md-6 col-lg-3 mb-4 mb-md-0">
          <div class="p-8 border rounded-2">
            <div
              class="d-flex mb-6 align-items-start justify-content-between"></div>
            <h1 class="mb-4" id="reorderLevel"></h1>
            <p class="mb-0">
              <span><strong>Reorder Level (kgs)</strong></span>
            </p>
          </div>
        </div>
        <div class="col-12 col-md-6 col-lg-3 px-4">
          <div class="p-8 border rounded-2">
            <div
              class="d-flex mb-6 align-items-start justify-content-between"></div>
            <h1 class="mb-4" id="currentQuantity"></h1>
            <p class="mb-0">
              <span><strong>Current Quantity (kgs)</strong></span>
            </p>
          </div>
        </div>
      </div>
    </div>
  </section>

  <div class="row">
    <div class="col-md-6"></div>
    <div class="col-md-6">
      <h3>Movement Summary</h3>
    </div>

    <div class="col-md-5">
      <h2 id="productTitle">Product: Not Selected</h2>
    </div>
    <div class="col-md-3">
      <div class="input-group">
        <input
          type="date"
          id="fromDate"
          class="form-control"
          placeholder="From date" />
        <input
          type="date"
          id="toDate"
          class="form-control"
          placeholder="To date" />
        <button id="goButton" class="btn btn-primary">Go</button>
      </div>
    </div>
    <div class="col-md-2">
      <input
        type="text"
        id="searchInput"
        class="form-control"
        placeholder="Search..." />
    </div>
    <div class="col-md-2">
      <button
        type="button"
        class="btn btn-primary"
        onclick="generateReport()"
        id="generateReport">
        <i class="fas fa-cog"></i> Generate Report
      </button>
    </div>
  </div>
  <div class="container mt-5">
    <div class="row">
      <!-- Product Details Card -->
      <!-- Product Details Card -->
      <div class="col-md-4">
        <div class="card">
          <div class="card-header">
            <h4>Product Details</h4>
          </div>
          <ul class="list-group list-group-flush">
            <!-- Product Selection Dropdown -->
            <li class="list-group-item">
              <label for="productSelector" class="form-label"
                >Select Product for quick details:</label
              >
              <select id="productSelector" class="form-select productSelector">
                <option value="">Select Product</option>
                <% if (products) { %> <% for (let dat of products) { %>
                <option value="<%= dat.product_name %>">
                  <%= dat.product_name %>
                </option>
                <% } %> <% } %>
              </select>
            </li>
          </ul>
        </div>
      </div>

      <!-- Movement Table -->
      <div class="col-md-8">
        <table class="table table-striped table-hover">
          <thead class="table-primary">
            <tr>
              <th>Date</th>
              <th>Reference</th>
              <th>Description</th>
              <th>Qty In</th>
              <th>Qty Out</th>
              <th>Balance</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>

        <!-- Pagination -->
        <nav aria-label="Page navigation">
          <ul class="pagination justify-content-end">
            <li class="page-item disabled">
              <span class="page-link">Previous</span>
            </li>
            <li class="page-item active" aria-current="page">
              <span class="page-link"
                >1 <span class="sr-only">(current)</span></span
              >
            </li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item">
              <a class="page-link" href="#">Next</a>
            </li>
          </ul>
        </nav>
      </div>

      <!-- Product Movement Modal -->
      <div
        class="modal fade"
        id="movementReportModal"
        tabindex="-1"
        aria-labelledby="movementReportModalLabel"
        aria-hidden="true">
        <div
          class="modal-dialog modal-xl modal-dialog-scrollable modal-dialog-end">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="movementReportModalLabel">
                Product Movement Report
              </h5>
              <button
                type="button"
                class="btn-close"
                data-bs-dismiss="modal"
                aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <div class="card">
                <div
                  class="card-header d-flex justify-content-between align-items-center"></div>
                <div class="d-flex justify-content-center bg-dark">
                  <img
                    src="./sirius-assets/images/logos/sirius-logo.png"
                    alt="Agrifora Logo"
                    class="me-3"
                    style="width: 250px; height: auto" />
                </div>
                <br />
                <div class="text-center">
                  <h2>Product Movement Report</h2>
                </div>
                <div class="card-body">
                  <div class="row mb-3">
                    <div class="col-md-6">
                      <p class="mb-1" id="rangeTitle">
                        Product movement report from {Date}<br />to {Date}
                      </p>
                    </div>
                  </div>

                  <table class="table table-striped table-hover">
                    <thead class="table-primary">
                      <tr>
                        <th>Date</th>
                        <th>Reference</th>
                        <th>Description</th>
                        <th>Qty In</th>
                        <th>Qty Out</th>
                        <th>Balance</th>
                      </tr>
                    </thead>
                    <tbody id="yams">
                      <!-- Add more rows as needed -->
                      <!-- ... -->
                    </tbody>
                  </table>

                  <div><br /></div>
                </div>
              </div>
            </div>
            <div class="modal-footer">
              <button
                type="button"
                class="btn btn-secondary"
                data-bs-dismiss="modal">
                Close
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<!-- Footer container -->
<div class="main-footer">
  <span>&copy; 2023. Agrifora Management System. All Rights Reserved.</span>
  <span
    >Created by:
    <a href="http://soxfort.com" target="_blank"
      >Soxfort Solutions | Intuitive Innovation</a
    ></span
  >
</div>
<!-- main-footer -->
<script src="js/bootstrap/bootstrap.bundle.min.js"></script>
<script src="js/main.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<script src="js/charts-demo.js"></script>
<script>
  // Add an event listener to the product selector
  let selectedProduct;
  document
    .getElementById("productSelector")
    .addEventListener("change", function () {
      // Get the selected product value
      selectedProduct = this.value;

      const fromDate = document.getElementById("fromDate").value;
      const toDate = document.getElementById("toDate").value;

      // Check if both fromDate and toDate are not empty
      if (fromDate && toDate) {
        // Get the selected product value
        const selectedProduct =
          document.getElementById("productSelector").value;

        // Send an AJAX request to the server
        fetch("/productmovement", {
          method: "POST",
          body: JSON.stringify({
            product: selectedProduct,
            fromDate: fromDate,
            toDate: toDate,
          }),
          headers: {
            "Content-type": "application/json; charset=UTF-8",
          },
        })
          .then((response) => response.json())
          .then((data) => {
            // Update the table with the new data
            updateTable(data.movements, data.reorderLevel);
          })
          .catch((error) => {
            console.error("Error:", error);
          });
      } else {
        // Display a message or handle the case when either fromDate or toDate is empty
        window.alert("Please select both From Date and To Date.");
      }
    });

  function generateReport() {
    console.log(selectedProduct);
    const fromDate = document.getElementById("fromDate").value;
    const toDate = document.getElementById("toDate").value;
    const rangeTitle = document.getElementById("rangeTitle");
    rangeTitle.innerHTML = "";
    rangeTitle.innerHTML = `${selectedProduct} movement report from ${fromDate}<br />to ${toDate}`;

    // Check if both fromDate and toDate are not empty
    if (fromDate && toDate) {
      // Get the selected product value
      const selectedProduct = document.getElementById("productSelector").value;

      // Send an AJAX request to the server
      fetch("/productmovement", {
        method: "POST",
        body: JSON.stringify({
          product: selectedProduct,
          fromDate: fromDate,
          toDate: toDate,
        }),
        headers: {
          "Content-type": "application/json; charset=UTF-8",
        },
      })
        .then((response) => response.json())
        .then((data) => {
          console.log(data.movements);
          // Update the table with the new data
          let movements = data.movements;
          var modal = document.getElementById("movementReportModal");
          var modalTitle = modal.querySelector(".modal-title");
          var modalBody = modal.querySelector(".modal-body");
          var modalFooter = modal.querySelector(".modal-footer");
          const requesterSummary1 =
            document.getElementById("requesterSummary1");
          const requesterSummary2 =
            document.getElementById("requesterSummary2");
          const tableBody = document.getElementById("yams");

          tableBody.innerHTML = ""; // Clear the table body
          let balance = 0;
          let totalDispatched = 0;
          let totalPurchases = 0;

          movements.forEach((movement) => {
            const row = document.createElement("tr");
            const formattedDate = formatDate(movement.date);

            if (movement.product_name) {
              totalPurchases += parseFloat(movement.quantity);
              balance = parseFloat(balance) + parseFloat(movement.quantity);
              row.innerHTML = `
      <td>${formattedDate}</td>
      <td><a href="#">${movement.id}</a></td>
      <td>Stock In</td>
      <td>${movement.quantity.toLocaleString()}</td>
      <td>-</td>
      <td>${balance}</td>
    `;
            } else {
              balance = parseFloat(balance) - parseFloat(movement.quantity);
              totalDispatched += parseFloat(movement.quantity);
              row.innerHTML = `
      <td>${formattedDate}</td>
      <td><a href="#">${movement.dispatch_id}</a></td>
      <td>Dispatch</td>
      <td>-</td>
      <td>${movement.quantity.toLocaleString()}</td>
      <td>${balance}</td>
    `;
            }
            tableBody.appendChild(row);
          });

          // Show the modal
          $("#movementReportModal").modal("show");
        })
        .catch((error) => {
          console.error("Error:", error);
        });
    } else {
      // Display a message or handle the case when either fromDate or toDate is empty
      window.alert("Please select both From Date and To Date.");
    }
  }

  // Function to update the table with new data
  function updateTable(movements, reorderLevel) {
    let title = document.getElementById("productTitle");
    title.innerHTML = "";
    if (movements[0]) {
      title.innerHTML = "Product: " + movements[0].product_name;
    }
    const tableBody = document.querySelector("tbody");
    tableBody.innerHTML = ""; // Clear the table body
    let balance = 0;
    let totalDispatched = 0;
    let totalPurchases = 0;

    movements.forEach((movement) => {
      const row = document.createElement("tr");
      const formattedDate = formatDate(movement.date);

      if (movement.product_name) {
        totalPurchases += parseFloat(movement.quantity);
        balance = parseFloat(balance) + parseFloat(movement.quantity);
        let quantity =
          movement.quantity !== null ? movement.quantity.toLocaleString() : ""; // Check if quantity_ordered is not null

        row.innerHTML = `
      <td>${formattedDate}</td>
      <td><a href="#">${movement.id}</a></td>
      <td>Stock In</td>
      <td>${quantity}</td>
      <td>-</td>
      <td>${balance.toLocaleString()}</td>
    `;
      } else {
        balance = parseFloat(balance) - parseFloat(movement.quantity);
        totalDispatched += parseFloat(movement.quantity);
        let quantity =
          movement.quantity !== null ? movement.quantity.toLocaleString() : ""; // Check if quantity_ordered is not null
        row.innerHTML = `
      <td>${formattedDate}</td>
      <td><a href="#">${movement.dispatch_id}</a></td>
      <td>Dispatch</td>
      <td>-</td>
      <td>${quantity}</td>
      <td>${balance.toLocaleString()}</td>
    `;
      }
      tableBody.appendChild(row);
    });
    let tp = document.getElementById("totalPurchases");
    tp.innerHTML = "";
    tp.innerHTML = totalPurchases.toLocaleString();
    let td = document.getElementById("totalDispatched");
    td.innerHTML = "";
    td.innerHTML = totalDispatched.toLocaleString();
    let rl = document.getElementById("reorderLevel");
    rl.innerHTML = "";
    rl.innerHTML = reorderLevel.toLocaleString();
    let cq = document.getElementById("currentQuantity");
    cq.innerHTML = "";
    cq.innerHTML = (
      parseFloat(totalPurchases) - parseFloat(totalDispatched)
    ).toLocaleString();
  }
  function formatDate(dateString) {
    const date = new Date(dateString);
    const year = date.getFullYear();
    const month = String(date.getMonth() + 1).padStart(2, "0");
    const day = String(date.getDate()).padStart(2, "0");
    return `${year}-${month}-${day}`;
  }
</script>
